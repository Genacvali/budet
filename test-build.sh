#!/bin/bash
# Test build script for Budget PWA
set -euo pipefail

echo "üß™ Testing Budget PWA build process..."

cd frontend

echo "üßπ Cleaning old files..."
rm -rf node_modules package-lock.json build .svelte-kit 2>/dev/null || true

echo "üì• Installing dependencies with legacy peer deps..."
npm install --legacy-peer-deps

echo "üîç Checking TailwindCSS config..."
if [ -f "tailwind.config.js" ]; then
  echo "‚úÖ TailwindCSS config found"
else
  echo "‚ùå TailwindCSS config missing"
  exit 1
fi

echo "üîç Checking PostCSS config..."
if [ -f "postcss.config.js" ]; then
  echo "‚úÖ PostCSS config found"
else
  echo "‚ùå PostCSS config missing"
  exit 1
fi

echo "üî® Building project..."
npm run build

if [ -d "build" ]; then
  echo "‚úÖ Build successful!"
  echo "üìÅ Build directory contents:"
  ls -la build/
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ CSS —Å–æ–¥–µ—Ä–∂–∏—Ç TailwindCSS –∫–ª–∞—Å—Å—ã
  if find build -name "*.css" -exec grep -l "tailwind\|tw-" {} \; | head -1 >/dev/null; then
    echo "‚úÖ TailwindCSS compiled successfully"
  else
    echo "‚ö†Ô∏è TailwindCSS might not be working - no tailwind classes found in CSS"
  fi
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º service worker
  if [ -f "build/service-worker.js" ]; then
    echo "‚úÖ Service Worker generated"
  else
    echo "‚ö†Ô∏è Service Worker not found"
  fi
  
else
  echo "‚ùå Build failed - no build directory"
  exit 1
fi

cd ..

echo "üéâ Test build completed successfully!"
echo "Ready to deploy with: ./deploy-to-server.sh"